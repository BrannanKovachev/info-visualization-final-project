filter(State == "California") %>%
rename(id=CountyId) %>%
select(-State) %>%
select(id, TotalPop, County) %>%
mutate(County = str_remove(County," County")) %>%
rename(county = County)
View(CaCountyPopulation)
#Plot Choroplet of California as a Heatmap of Population
countiesPop %>%
ggplot(mapping = aes(x=long,y=lat,group=group,fill=TotalPop)) +
geom_polygon(color="gray") +
coord_equal() +
theme_map() +
scale_fill_gradientn(colors=c("lightgray","darkorchid1","darkorchid2","darkorchid3","darkorchid4"),
name="Population") +
theme(legend.position = "right") +
labs(title="Site Emissions in California Counties", subtitle = "Electricity Power Generation, Transmission, and Distribution")
#Get total population in a County
CaCountyPopulation <- acs2017 %>%
filter(State == "California") %>%
rename(id=CountyId) %>%
select(-State) %>%
select(id, TotalPop, County) %>%
mutate(County = str_remove(County," County")) %>%
rename(id = County)
#Get total population in a County
CaCountyPopulation <- acs2017 %>%
filter(State == "California") %>%
rename(id=CountyId) %>%
select(-State) %>%
select(id, TotalPop, County) %>%
mutate(County = str_remove(County," County")) %>%
rename(county = County)
#Join with map data
countiesPop <- left_join(county_map,CaCountyPopulation,by="id") %>% na.omit()
glimpse(county_map)
#Get total population in a County
CaCountyPopulation <- acs2017 %>%
filter(State == "California") %>%
rename(id=CountyId) %>%
select(-State) %>%
select(id, TotalPop, County) %>%
mutate(County = str_remove(County," County"),
id = as.character(id)) %>%
rename(county = County)
#Join with map data
countiesPop <- left_join(county_map,CaCountyPopulation,by="id") %>% na.omit()
#Plot Choroplet of California as a Heatmap of Population
countiesPop %>%
ggplot(mapping = aes(x=long,y=lat,group=group,fill=TotalPop)) +
geom_polygon(color="gray") +
coord_equal() +
theme_map() +
scale_fill_gradientn(colors=c("lightgray","darkorchid1","darkorchid2","darkorchid3","darkorchid4"),
name="Population") +
theme(legend.position = "right") +
labs(title="Site Emissions in California Counties", subtitle = "Electricity Power Generation, Transmission, and Distribution")
View(CaCountyPopulation)
View(countiesPop)
#Get total population in a County
CaCountyPopulation <- acs2017 %>%
filter(State == "California") %>%
rename(id=CountyId) %>%
select(-State) %>%
select(id, TotalPop, County) %>%
mutate(County = str_remove(County," County"),
id = as.character(id)) %>%
rename(county = County)
#Join with map data
countiesPop <- left_join(county_map,CaCountyPopulation,by="id")
#Plot Choroplet of California as a Heatmap of Population
countiesPop %>%
ggplot(mapping = aes(x=long,y=lat,group=group,fill=TotalPop)) +
geom_polygon(color="gray") +
coord_equal() +
theme_map() +
scale_fill_gradientn(colors=c("lightgray","darkorchid1","darkorchid2","darkorchid3","darkorchid4"),
name="Population") +
theme(legend.position = "right") +
labs(title="Site Emissions in California Counties", subtitle = "Electricity Power Generation, Transmission, and Distribution")
View(countiesPop)
#Get total population in a County
CaCountyPopulation <- acs2017 %>%
filter(State == "California") %>%
rename(id=CountyId) %>%
select(-State) %>%
select(id, TotalPop, County) %>%
mutate(County = str_remove(County," County"),
id = paste0('0',as.character(id))) %>%
rename(county = County)
#Join with map data
countiesPop <- left_join(county_map,CaCountyPopulation,by="id") %>% na.omit()
#Plot Choroplet of California as a Heatmap of Population
countiesPop %>%
ggplot(mapping = aes(x=long,y=lat,group=group,fill=TotalPop)) +
geom_polygon(color="gray") +
coord_equal() +
theme_map() +
scale_fill_gradientn(colors=c("lightgray","darkorchid1","darkorchid2","darkorchid3","darkorchid4"),
name="Population") +
theme(legend.position = "right") +
labs(title="Site Emissions in California Counties", subtitle = "Electricity Power Generation, Transmission, and Distribution")
#Get total population in a County
CaCountyPopulation <- acs2017 %>%
filter(State == "California") %>%
rename(id=CountyId) %>%
select(-State) %>%
select(id, TotalPop, County) %>%
mutate(County = str_remove(County," County"),
id = paste0('0',as.character(id))) %>%
rename(county = County)
#Join with map data
countiesPop <- left_join(county_map,CaCountyPopulation,by="id") %>% na.omit()
#Plot Choroplet of California as a Heatmap of Population
countiesPop %>%
ggplot(mapping = aes(x=long,y=lat,group=group,fill=TotalPop)) +
geom_polygon(color="gray") +
coord_equal() +
theme_map() +
scale_fill_gradientn(colors=c("lightgray","darkorchid1","darkorchid2","darkorchid3","darkorchid4"),
name="Population") +
theme(legend.position = "right") +
labs(title="Population in California Counties")
#Get total emissions in a County
caEmissionsByCounty <- NEI2017 %>%
filter(state=="CA",`pollutant type(s)`!="nan", str_starts(as.character(.$`naics code`),"2211")) %>%
select(`fips code`,county,`pollutant type(s)`,`total emissions`,`emissions uom`,`naics code`) %>%
mutate(`total emissions`=case_when(as.character(`emissions uom`)=="LB" ~ `total emissions`*.0005,
TRUE ~ `total emissions`),
`fips code` = paste0('0',as.character(`fips code`))) %>%
select(-`emissions uom`) %>%
group_by(county,`fips code`) %>%
summarise(`county_total_emissions`=sum(`total emissions`)) %>%
rename(id = `fips code`)
#Join with map data
counties <- left_join(county_map,caEmissionsByCounty,by="id") %>% na.omit()
#Plot Choroplet of California as a Heatmap of Emissions
counties %>%
ggplot(mapping = aes(x=long,y=lat,group=group,fill=county_total_emissions)) +
geom_polygon(color="gray") +
coord_equal() +
theme_map() +
scale_fill_gradientn(colors=c("lightgray","darkorchid1","darkorchid2","darkorchid3","darkorchid4"),
name="Emissions (Tons)") +
theme(legend.position = "right") +
labs(title="Site Emissions in California Counties", subtitle = "Electricity Power Generation, Transmission, and Distribution")
View(acs2017)
View(acs2017)
View(populationData)
View(countyFIPS)
knitr::opts_chunk$set(echo = TRUE)
pacman::p_load(arrow, stringr, socviz, tidyverse, rmarkdown,
htmlwidgets, htmltools, maps, leaflet, kableExtra, tinytex,
ggthemes, dplyr, webshot)
#3 Demographic/Population Statistics 2017
acs2017 <- read_csv("./data/acs2017_county_data.csv")
#4 National Emissions Inventory 2017 - Pollution
NEI2017 <- read_parquet("./data/NEI_2017_full_data.parquet")
#5 Global power plants
#source: https://datasets.wri.org/dataset/globalpowerplantdatabase
# powerPlants <- read_csv("./data/global_power_plant_database_v_1_3/global_power_plant_database.csv")
#6 Population Raw Data Annual County level : No Demographics
populationData <- read_csv("./data/co-est2019-alldata.csv")
#7 Zip/County/FIPS
countyFIPS  <- read_csv("./data/ZIP-COUNTY-FIPS_2018-03.csv")
View(emissionsPopChangeByCounty)
#Create a Dataframe of the average Population Change in each California County for the past 5 years
caCountyPopulationChange <- populationData %>%
filter(STNAME=="California",COUNTY!= "000") %>%
select(STATE,CTYNAME,COUNTY,NPOPCHG_2015,NPOPCHG_2016,NPOPCHG_2017,NPOPCHG_2018,NPOPCHG_2019) %>%
mutate(fips = paste0(.$STATE,.$COUNTY),
fiveYearAvgPopChange = (NPOPCHG_2015+NPOPCHG_2016+NPOPCHG_2017+NPOPCHG_2018+NPOPCHG_2019)/5,
CTYNAME=str_remove(CTYNAME," County")) %>%
select(fips, fiveYearAvgPopChange,CTYNAME) %>%
rename(id = fips,name=CTYNAME)
#Join the Population Change dataframe with the County Emissions dataframe from question 1
emissionsPopChangeByCounty <- left_join(caCountyPopulationChange, caEmissionsByCounty, by="id") %>%
select(-county) %>%
na.omit()
#Sort by population change
emissionsPopChangeByCounty <- emissionsPopChangeByCounty %>%
arrange(fiveYearAvgPopChange)
#Add rank in terms of population change
emissionsPopChangeByCounty <- emissionsPopChangeByCounty %>% add_column(rankOfPopChange = NA)
for (i in 1:length(emissionsPopChangeByCounty$fiveYearAvgPopChange)){
emissionsPopChangeByCounty$rankOfPopChange[i] = i
}
View(emissionsPopChangeByCounty)
#Create a Dataframe of the average Population Change in each California County for the past 5 years
caCountyPopulationChange <- populationData %>%
filter(STNAME=="California",COUNTY!= "000") %>%
select(STATE,CTYNAME,COUNTY,NPOPCHG_2015,NPOPCHG_2016,NPOPCHG_2017,NPOPCHG_2018,NPOPCHG_2019) %>%
mutate(fips = paste0(.$STATE,.$COUNTY),
fiveYearAvgPopChange = (NPOPCHG_2015+NPOPCHG_2016+NPOPCHG_2017+NPOPCHG_2018+NPOPCHG_2019)/5,
CTYNAME=str_remove(CTYNAME," County")) %>%
select(fips, fiveYearAvgPopChange,CTYNAME) %>%
rename(id = fips,name=CTYNAME)
#Join the Population Change dataframe with the County Emissions dataframe from question 1
emissionsPopChangeByCounty <- left_join(caCountyPopulationChange, caEmissionsByCounty, by="id") %>%
select(-county) %>%
na.omit()
View(emissionsPopChangeByCounty)
#Sort by population change
emissionsPopChangeByCounty <- emissionsPopChangeByCounty %>%
arrange(fiveYearAvgPopChange)
#Add rank in terms of population change
emissionsPopChangeByCounty <- emissionsPopChangeByCounty %>% add_column(rankOfPopChange = NA)
for (i in 1:length(emissionsPopChangeByCounty$fiveYearAvgPopChange)){
emissionsPopChangeByCounty$rankOfPopChange[i] = i
}
#Sort by emissions
emissionsPopChangeByCounty <- emissionsPopChangeByCounty %>%
arrange(county_total_emissions)
#Add rank in terms of emissions
emissionsPopChangeByCounty <- emissionsPopChangeByCounty %>% add_column(rankOfEmissions = NA)
for (i in 1:length(emissionsPopChangeByCounty$county_total_emissions)){
emissionsPopChangeByCounty$rankOfEmissions[i] = i
}
#Plot the Rank of a County in terms of it's Population Change vs its Rank in terms of Quantity of Emissions
emissionsPopChangeByCounty %>%
ggplot() +
geom_point(aes(x=rankOfEmissions,y=rankOfPopChange,
color=rankOfPopChange*rankOfEmissions),size=3) +
geom_smooth(aes(x=rankOfEmissions,y=rankOfPopChange), method = "lm", se = FALSE, color="deeppink") +
scale_colour_gradient(low="blue",high="red") +
theme_minimal() +
annotate('text', emissionsPopChangeByCounty$rankOfEmissions, emissionsPopChangeByCounty$rankOfPopChange-1, label=emissionsPopChangeByCounty$name) +
xlab(label="Rank by Quantity of Emissions") +
ylab(label="Rank by Increase in Population") +
labs(title="California Counties Ranked", subtitle = "Population Increase vs Emissions") +
guides(color="none",size="none")
View(caEmissionsByCounty)
knitr::opts_chunk$set(echo = TRUE)
options(knitr.table.format = "latex")
# Question 1 & 3 data
countyGeneration <- read_csv("./data/organised_Gen.csv")
knitr::opts_chunk$set(echo = TRUE)
options(knitr.table.format = "latex")
pacman::p_load(tidyverse, arrow, sf, usmap, maps, RColorBrewer,cowplot,kableExtra)
# Question 1 & 3 data
countyGeneration <- read_csv("./data/organised_Gen.csv")
us_states <- us_map("states")
# Question 2 data
# https://www.kaggle.com/datasets/rasyidstat/ds4g-additional-dataset
stateGen <- readxl::read_xls("./data/annual_generation_state.xls")
stateEmis <- readxl::read_xls("./data/emission_annual.xls")
View(stateEmis)
knitr::opts_chunk$set(echo = TRUE)
options(knitr.table.format = "latex")
pacman::p_load(tidyverse, arrow, sf, usmap, maps, RColorBrewer,cowplot,kableExtra)
# Question 1 & 3 data
countyGeneration <- read_csv("./data/organised_Gen.csv")
us_states <- us_map("states")
# Question 2 data
# https://www.kaggle.com/datasets/rasyidstat/ds4g-additional-dataset
stateGen <- readxl::read_xls("./data/annual_generation_state.xls")
stateEmis <- readxl::read_xls("./data/emission_annual.xls")
# Make a dataframe containing all emissions (except the totals) for each state and the entire US in 2018
Emis18 <- stateEmis %>%
filter(Year == 2018) %>%
filter(`Energy Source` != "All Sources") %>%
select(State, `Energy Source`, `CO2
(Metric Tons)`, `SO2
(Metric Tons)`, `NOx
(Metric Tons)`) %>%
rename("Source" = `Energy Source`)
# Combining two columns to make a left join easier with the other dataset
Emis18$combine <- paste(Emis18$State, Emis18$Source, sep = "," )
# Putting data into a single entry for each source per state.
Emis18 <- Emis18 %>%
group_by(combine) %>%
summarize(CO2 = sum(`CO2
(Metric Tons)`),SO2 = sum(`SO2
(Metric Tons)`),NOx = sum(`NOx
(Metric Tons)`))
# Making a dataframe containing all of the power generation in 2018 by state
Gen18 <- stateGen %>%
filter(YEAR == 2018) %>%
filter(`ENERGY SOURCE` != "Total") %>%
select(STATE, `ENERGY SOURCE`, `GENERATION (Megawatthours)`) %>%
rename("Source" = `ENERGY SOURCE`)
View(stateGen)
knitr::opts_chunk$set(echo = TRUE)
pacman::p_load(arrow, stringr, socviz, tidyverse, rmarkdown,
htmlwidgets, htmltools, maps, leaflet, kableExtra, tinytex,
ggthemes, dplyr, webshot)
#1 Demographic/Population Statistics 2017
acs2017 <- read_csv("./data/acs2017_county_data.csv")
#2 National Emissions Inventory 2017 - Pollution
NEI2017 <- read_parquet("./data/NEI_2017_full_data.parquet")
#3 Population Raw Data Annual County level : No Demographics
populationData <- read_csv("./data/co-est2019-alldata.csv")
#4 Zip/County/FIPS
countyFIPS  <- read_csv("./data/ZIP-COUNTY-FIPS_2018-03.csv")
#Get total emissions in a County
caEmissionsByCounty <- NEI2017 %>%
filter(state=="CA",`pollutant type(s)`!="nan", str_starts(as.character(.$`naics code`),"2211")) %>%
select(`fips code`,county,`pollutant type(s)`,`total emissions`,`emissions uom`,`naics code`) %>%
mutate(`total emissions`=case_when(as.character(`emissions uom`)=="LB" ~ `total emissions`*.0005,
TRUE ~ `total emissions`),
`fips code` = paste0('0',as.character(`fips code`))) %>%
select(-`emissions uom`) %>%
group_by(county,`fips code`) %>%
summarise(`county_total_emissions`=sum(`total emissions`)) %>%
rename(id = `fips code`)
#Join with map data
counties <- left_join(county_map,caEmissionsByCounty,by="id") %>% na.omit()
#Plot Choropleth of California as a Heat map of Emissions
counties %>%
ggplot(mapping = aes(x=long,y=lat,group=group,fill=county_total_emissions)) +
geom_polygon(color="gray") +
coord_equal() +
theme_map() +
scale_fill_gradientn(colors=c("lightgray","darkorchid1","darkorchid2","darkorchid3","darkorchid4"),
name="Emissions (Tons)") +
theme(legend.position = "right") +
labs(title="Site Emissions in California Counties", subtitle = "Electricity Power Generation, Transmission, and Distribution")
#Get total population in a County
CaCountyPopulation <- acs2017 %>%
filter(State == "California") %>%
rename(id=CountyId) %>%
select(-State) %>%
select(id, TotalPop, County) %>%
mutate(County = str_remove(County," County"),
id = paste0('0',as.character(id))) %>%
rename(county = County)
#Join with map data
countiesPop <- left_join(county_map,CaCountyPopulation,by="id") %>% na.omit()
#Plot Choropleth of California as a Heat map of Population
countiesPop %>%
ggplot(mapping = aes(x=long,y=lat,group=group,fill=TotalPop)) +
geom_polygon(color="gray") +
coord_equal() +
theme_map() +
scale_fill_gradientn(colors=c("lightgray","darkorchid1","darkorchid2","darkorchid3","darkorchid4"),
name="Population") +
theme(legend.position = "right") +
labs(title="Population in California Counties")
knitr::opts_chunk$set(echo = TRUE)
options(knitr.table.format = "latex")
pacman::p_load(tidyverse, arrow, sf, usmap, maps, RColorBrewer,cowplot,kableExtra)
# Question 1 & 3 data
countyGeneration <- read_csv("./data/organised_Gen.csv")
us_states <- us_map("states")
# Question 2 data
# https://www.kaggle.com/datasets/rasyidstat/ds4g-additional-dataset
stateGen <- readxl::read_xls("./data/annual_generation_state.xls")
stateEmis <- readxl::read_xls("./data/emission_annual.xls")
# Make a dataframe containing all emissions (except the totals) for each state and the entire US in 2018
Emis18 <- stateEmis %>%
filter(Year == 2018) %>%
filter(`Energy Source` != "All Sources") %>%
select(State, `Energy Source`, `CO2
(Metric Tons)`, `SO2
(Metric Tons)`, `NOx
(Metric Tons)`) %>%
rename("Source" = `Energy Source`)
# Combining two columns to make a left join easier with the other dataset
Emis18$combine <- paste(Emis18$State, Emis18$Source, sep = "," )
# Putting data into a single entry for each source per state.
Emis18 <- Emis18 %>%
group_by(combine) %>%
summarize(CO2 = sum(`CO2
(Metric Tons)`),SO2 = sum(`SO2
(Metric Tons)`),NOx = sum(`NOx
(Metric Tons)`))
# Making a dataframe containing all of the power generation in 2018 by state
Gen18 <- stateGen %>%
filter(YEAR == 2018) %>%
filter(`ENERGY SOURCE` != "Total") %>%
select(STATE, `ENERGY SOURCE`, `GENERATION (Megawatthours)`) %>%
rename("Source" = `ENERGY SOURCE`)
# Combining for a left_join
Gen18$combine <- paste(Gen18$STATE, Gen18$Source, sep = ",")
# Getting a single observation for source per state
Gen18 <- Gen18 %>%
group_by(combine) %>%
summarize(MWh = sum(`GENERATION (Megawatthours)`))
# Combining the two datasets together
combined18 <- left_join(Gen18, Emis18, by = "combine") %>%
separate(combine, c("State","Source"), extra = "merge", fill = "left")
# Converting from raw numbers into tons per MWh
emissionsMWh <- combined18 %>%
na.omit() %>%
mutate("Tons CO2/MWh" = CO2/MWh,"Tons SO2/MWh" = SO2/MWh,"Tons NOx/MWh" = NOx/MWh,) %>%
select(State, Source, `Tons CO2/MWh`, `Tons SO2/MWh`, `Tons NOx/MWh`)
# Getting generation per state for 2021
state_gen <- countyGeneration %>%
filter(YEAR == 2021) %>%
group_by(STATE) %>%
summarize(sum(`GENERATION (Megawatthours)`)) %>%
rename("abbr" = "STATE",
"gen" = "sum(`GENERATION (Megawatthours)`)") %>%
mutate(gen = gen/1000000)
# Making dataframe for chloropleth
state_gen_map <- left_join(us_states, state_gen, by = "abbr")
# Generation per state for 2001, 2005, 2010, 2015, and 2020
gap5yr <- countyGeneration %>%
filter(YEAR %in% c(2001,2005,2010,2015,2020)) %>%
group_by(YEAR, STATE) %>%
summarize(sum(`GENERATION (Megawatthours)`)) %>%
rename("abbr" = "STATE",
"gen" = "sum(`GENERATION (Megawatthours)`)") %>%
mutate(gen = gen/1000000)
# Making dataframe with coordinates for map
gap5yr_map <- left_join(us_states,gap5yr, by = "abbr")
# scatterplot with line of data from all years before 2022, colored by source
countyGeneration %>%
filter(YEAR < 2022) %>%
group_by(YEAR, `ENERGY SOURCE`) %>%
summarize(count = n()) %>%
ggplot(aes(x = YEAR, y = count, group = `ENERGY SOURCE`, color=`ENERGY SOURCE`))+
geom_line(aes(color = `ENERGY SOURCE`)) +
geom_point(aes(color = `ENERGY SOURCE`)) +
labs(title = "Number of Energy Producers in the US", subtitle = "(2001-2021)", y = "Number of Producers",
x = "Year", color = "Energy Source") +
theme_classic()
# Same graph but filtering out all sources of brown energy
countyGeneration %>%
filter(YEAR < 2022) %>%
filter(`ENERGY SOURCE` %in% c("Geothermal","Hydroelectric Conventional","Nuclear",
"Other Biomass", "Pumped Storage","Solar Thermal
and Photovoltaic", "Wind", "Wood and Wood Derived Fuels")) %>%
group_by(YEAR, `ENERGY SOURCE`) %>%
summarize(count = n()) %>%
ggplot(aes(x = YEAR, y = count, group = `ENERGY SOURCE`, color=`ENERGY SOURCE`))+
geom_line(aes(color = `ENERGY SOURCE`)) +
geom_point(aes(color = `ENERGY SOURCE`)) +
labs(title = "Number of Green Energy Producers in the US", subtitle = "(2001-2021)",
y = "Number of Producers", x = "Year", color = "Energy Source") +
theme_classic()
# Table showing all states, their emissions by source, and their power generated by source
combined18 %>%
rename("MWh Generated" = "MWh") %>%
head(50) %>%
kbl(caption = "Power Generation and Emissions") %>%
kable_minimal() %>%
add_header_above(c(" " = 3, "Gas Emissions (Metric Tons)" = 3))
# Table filtered to just totals from US
combined18 %>%
filter(State == "US") %>%
rename("MWh Generated" = "MWh", "Energy Source" = "Source") %>%
kbl(caption = "US Total Power Generation and Emissions") %>%
kable_minimal() %>%
kable_styling(latex_options = "hold_position") %>%
add_header_above(c(" " = 3, "Gas Emissions (Metric Tons)" = 3))
# Further filtered to not include sources with no emissions in all three categories
combined18 %>%
na.omit() %>%
filter(State == "US") %>%
rename("MWh Generated" = "MWh", "Energy Source" = "Source") %>%
kbl(caption = "US Total Power Generation and Emissions") %>%
kable_minimal() %>%
kable_styling(latex_options = "HOLD_position") %>%
add_header_above(c(" " = 3, "Gas Emissions (Metric Tons)" = 3))
# Puts CO2 calculations in table and drops any value that generates 0 tons/mwh
emissionsMWh %>%
filter(State == "US") %>%
select(State, Source, `Tons CO2/MWh`) %>%
rename("Energy Source" = "Source") %>%
filter(`Tons CO2/MWh` > 0) %>%
arrange(`Tons CO2/MWh`) %>%
kbl(caption = "Carbon Dioxide Generation per Megawatt Hour") %>%
kable_minimal() %>%
kable_styling(latex_options = "hold_position")
# Same as above but with SO2
emissionsMWh %>%
filter(State == "US") %>%
select(State, Source, `Tons SO2/MWh`) %>%
rename("Energy Source" = "Source") %>%
filter(`Tons SO2/MWh` > 0) %>%
arrange(`Tons SO2/MWh`) %>%
kbl(caption = "Sulfur Dioxide Generation per Megawatt Hour") %>%
kable_minimal() %>%
kable_styling(latex_options = "hold_position")
# Same as above but with NOx
emissionsMWh %>%
filter(State == "US") %>%
select(State, Source, `Tons NOx/MWh`) %>%
rename("Energy Source" = "Source") %>%
filter(`Tons NOx/MWh` > 0) %>%
arrange(`Tons NOx/MWh`) %>%
kbl(caption = "Nitrous Oxides (NO and NO2) Generation per Megawatt Hour") %>%
kable_minimal() %>%
kable_styling(latex_options = "hold_position")
# Centroid for putting total generation on choropleth
centroid <- aggregate(data = state_gen_map, cbind(x, y) ~ gen, FUN = mean)
# Choropleth of US as heat map of generation
state_gen_map %>%
ggplot(mapping = aes(x = x, y = y, fill = gen)) +
geom_polygon(mapping = aes(group = group)) +
geom_text(data = centroid, mapping = aes(x = x, y = y, label =sprintf("%0.0f", gen))) +
scale_fill_distiller(palette = "YlOrRd", trans = "reverse") +
coord_equal() +
theme_map() +
labs(title = "US Power Generation by State", subtitle = "2021",
x = element_blank(), y = element_blank(), fill = "Generation\n(TWh)")
# heatmap of generation wrapped by year
gap5yr_map %>%
ggplot(mapping = aes(x = x, y = y, fill = gen)) +
geom_polygon(mapping = aes(group = group)) +
scale_fill_distiller(palette = "YlOrRd", trans = "reverse") +
coord_equal() +
theme_map() +
labs(title = "US Power Generation by State",
x = element_blank(), y = element_blank(), fill = "Generation\n(TWh)") +
facet_wrap(~YEAR)
knitr::opts_chunk$set(echo = TRUE)
options(knitr.table.format = "latex")
pacman::p_load(arrow, stringr, socviz, tidyverse, rmarkdown,
htmlwidgets, htmltools, maps, leaflet, kableExtra, tinytex,
ggthemes, dplyr, webshot, sf, usmap, RColorBrewer, cowplot)
